{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","title","a","fetch","response","json","Error","FindMovie","addMovie","useState","setTitle","setMovie","movieWasFound","setMovieFound","foundMovie","titleNew","movieFromServer","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","App","setMovies","some","item","moviesList","ReactDOM","render","document","getElementById"],"mappings":"8TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,sCCVNC,E,8EAAf,WAAwBC,GAAxB,eAAAC,EAAA,+EAE2BC,MAAM,8CAAD,OAA+CF,IAF/E,cAEUG,EAFV,gBAIiBA,EAASC,OAJ1B,8EAMU,IAAIC,MAAM,SANpB,0D,sBAcO,IAAMC,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,mBAAS,IAAnC,mBAAOR,EAAP,KAAcS,EAAd,KACA,EAA0BD,mBAAuB,MAAjD,mBAAOpB,EAAP,KAAcsB,EAAd,KACA,EAAuCF,oBAAS,GAAhD,mBAAOG,EAAP,KAAsBC,EAAtB,KAOMC,EAAU,uCAAG,WAAOC,GAAP,eAAAb,EAAA,0DACbD,EADa,gCAEeD,EAASe,GAFxB,QAETC,EAFS,QAIKtB,OAClBiB,EAASK,GACTH,GAAc,IAEdA,GAAc,GARD,2CAAH,sDAoBhB,OACE,qCACE,uBAAMvB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,wBAAOA,UAAU,QAAQ2B,QAAQ,cAAjC,wBAEE,qBAAK3B,UAAU,UAAf,SACE,uBACE4B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ9B,UAAU,kBACV+B,MAAOpB,EACPqB,SAtCa,SAACC,GAC1Bb,EAASa,EAAMC,OAAOH,OACtBR,GAAc,YAyCND,GACA,mBAAGtB,UAAU,iBAAb,sDAIJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE4B,KAAK,SACL5B,UAAU,kBACVmC,QAAS,kBAAMX,EAAWb,IAH5B,4BASF,qBAAKX,UAAU,UAAf,SACE,wBACE4B,KAAK,SACL5B,UAAU,oBACVmC,QA7CQ,WACdpC,IACFmB,EAASnB,GACTqB,EAAS,MAuCH,qCAWLrB,GACC,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,WC7FfqC,EAAgB,WAC3B,MAA4BjB,mBAAkB,IAA9C,mBAAOZ,EAAP,KAAe8B,EAAf,KAQA,OACE,sBAAKrC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWkB,SAZA,SAACnB,GACXQ,EAAO+B,MAAK,SAAAC,GAAI,OAAIA,EAAK9B,SAAWV,EAAMU,WAC7C4B,GAAU,SAAAG,GAAU,4BAAQA,GAAR,CAAoBzC,gBCN9C0C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fc94d306.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\nasync function getMovie(title: string): Promise<Movie> {\n  try {\n    const response = await fetch(`https://www.omdbapi.com/?apikey=f151d5b2&t=${title}`);\n\n    return await response.json();\n  } catch (error) {\n    throw new Error('error');\n  }\n}\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [movieWasFound, setMovieFound] = useState(true);\n\n  const handleTittleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setMovieFound(true);\n  };\n\n  const foundMovie = async (titleNew: string) => {\n    if (title) {\n      const movieFromServer = await getMovie(titleNew);\n\n      if (movieFromServer.Title) {\n        setMovie(movieFromServer);\n        setMovieFound(true);\n      } else {\n        setMovieFound(false);\n      }\n    }\n  };\n\n  const addNewMovie = () => {\n    if (movie) {\n      addMovie(movie);\n      setTitle('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className=\"input is-danger\"\n                value={title}\n                onChange={handleTittleChange}\n              />\n            </div>\n          </label>\n\n          {!movieWasFound && (\n            <p className=\"help is-danger\"> Can&apos;t find a movie with such a title</p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => foundMovie(title)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addNewMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    if (!movies.some(item => item.imdbID === movie.imdbID)) {\n      setMovies(moviesList => [...moviesList, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}